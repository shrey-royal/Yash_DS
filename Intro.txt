Q. What is Data Structure?
A> A data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently.

> A data structure is not only used for organizing the data. It is also used for processing, retrieving, and storing data. There are different basic and advanced types of data structures that are used in almost every program or software system that has been developed. So we must have good knowledge about data structures.


Q. What are the types of Data Structure?
A.  1 -> Linear Data Structure: 
        > In a linear data structure, the data items are arranged in a linear sequence.
        > Example: Array, Linked List, Stack, and Queue.

    2 -> Non-Linear Data Structure:
        > In a non-linear data structure, the data items are not in sequence.
        > Example: Tree and Graph.

    3 -> Homogeneous Data Structure:
        > In a homogeneous data structure, all the elements are of the same type.
        > Example: Array

    4 -> Non-Homogeneous Data Structure:
        > In a non-homogeneous data structure, the elements may or may not be of the same type.
        > Example: Structure and Union.

1. Linear Data Structure: Data structure in which data elements are arranged sequentially or linearly, where each element is attached to its previous and next adjacent elements, is called a linear data structure. 
> Examples of linear data structures are array, stack, queue, linked list, etc.
    a. Static data structure: Static data structure has a fixed memory size. It is easier to access the elements in a static data structure. 
    > An example of this data structure is an array.

    b. Dynamic data structure: In dynamic data structure, the size is not fixed. It can be randomly updated during the runtime which may be considered efficient concerning the memory (space) complexity of the code. 
    > Examples of this data structure are queue, stack, etc.
    
2. Non-linear data structure: Data structures where data elements are not placed sequentially or linearly are called non-linear data structures. In a non-linear data structure, we canâ€™t traverse all the elements in a single run only. 
> Examples of non-linear data structures are trees and graphs.


Need of Data Structure:
> The structure of the data and the synthesis of the algorithm are relative to each other. Data presentation must be easy to understand so the developer, as well as the user, can make an efficient implementation of the operation.
> Data structures provide an easy way of organizing, retrieving, managing, and storing data.

Here is a list of the needs for data: 
    1. Data structure modification is easy. 
    2. It requires less time. 
    3. Save storage memory space. 
    4. Data representation is easy. 
    5. Easy access to the large database.


---------------------------------------------------------------------------------------------

What is Data Structure?
A data structure is a storage that is used to store and organize data in a computer so that it can be accessed and modified efficiently.

It is a way of organizing data in a computer so that it can be used efficiently.

Classification of Data Structure

1. Linear Data Structure
    a. Static Data Structure
        i. Array

    b. Dynamic Data Structure
        i. Linked List
        ii. Stack
        iii. Queue

2. Non-Linear Data Structure
    a. Tree
    b. Graph


1. Linear Data Structure 
-> In this data structure, the data is stored in a sequential manner. each element is connected to its next element. examples are array, linked list, stack, queue.

    a. Static Data Structure
    -> In this data structure, the size of the data structure is fixed. examples are array.

    b. Dynamic Data Structure
    -> In this data structure, the size of the data structure is not fixed. examples are linked list, stack, queue.

2. Non-Linear Data Structure
-> In this data structure, the data is stored in a non-sequential manner. each element is connected to its next element. examples are tree, graph.

-> we can't traverse all the elements in a single run.

Popular types of Data Structure:
    i. Array
    ii. Linked List
    iii. Stack
    iv. Queue
    v. Tree
    vi. Graph
    vii. Binary Tree
    viii. Binary Search Tree
    ix. Heap
    x. Hashing
    xi. Graph
    xii. Matrix